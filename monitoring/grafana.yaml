#apiVersion: v1
#kind: Secret
#metadata:
#  name: credentials
#data: {}

---

apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: monitoring
  labels:
    app.kubernetes.io/name: monitoring
spec:
  config:
    log:
      mode: "console"
    auth:
      disable_login_form: "false"

  deployment:
    spec:
      template:
        spec:
          imagePullSecrets:
            - name: docker-io-credentials

          containers:
            - name: grafana
              env:
                - name: GF_SECURITY_ADMIN_USER
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_USER
                      name: credentials
                - name: GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: GF_SECURITY_ADMIN_PASSWORD
                      name: credentials

  ingress:
    metadata:
      annotations:
        cert-manager.io/cluster-issuer: "stefanmuraru-com-issuer"

    spec:
      ingressClassName: private
      rules:
        - host: monitoring.stefanmuraru.com
          http:
            paths:
              - backend:
                  service:
                    name: monitoring-service
                    port:
                      number: 3000
                path: /
                pathType: Prefix
      tls:
        - hosts:
            - monitoring.stefanmuraru.com
          secretName: monitoring-stefanmuraru-com-tls

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDatasource
metadata:
  name: prometheus-internal
spec:
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  datasource:
    name: 'Prometheus - Internal'
    type: prometheus
    access: proxy
    url: http://prometheus-operated:9090
    isDefault: true
    jsonData:
      "tlsSkipVerify": true
      "timeInterval": "5s"

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: dashboard-node-exporter
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 1860

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-view-pods
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 15760

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-view-global
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 15757

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-view-namespaces
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 15758

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-system-apiserver
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 15761

---

apiVersion: grafana.integreatly.org/v1beta1
kind: GrafanaDashboard
metadata:
  name: kubernetes-view-nodes
spec:
  datasources:
    - inputName: "DS_PROMETHEUS"
      datasourceName: "Prometheus - Internal"
  instanceSelector:
    matchLabels:
      app.kubernetes.io/name: monitoring
  grafanaCom:
    id: 15759
