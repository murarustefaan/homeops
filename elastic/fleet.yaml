apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: monitoring-fleet-server
  namespace: monitoring
spec:
  version: 8.15.3
  kibanaRef:
    name: monitoring
  elasticsearchRefs:
    - name: monitoring
  mode: fleet
  fleetServerEnabled: true
  policyID: eck-fleet-server
  deployment:
    replicas: 1
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0

---

apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: monitoring-agent
  namespace: monitoring
spec:
  version: 8.15.3
  kibanaRef:
    name: monitoring
  fleetServerRef:
    name: monitoring-fleet-server
  mode: fleet
  policyID: d044df3c-02a0-4171-a4e7-3d45c1002fec
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        volumes:
          - name: agent-data
            emptyDir: { }

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
  - apiGroups: [ "" ] # "" indicates the core API group
    resources:
      - pods
      - nodes
      - namespaces
    verbs:
      - get
      - watch
      - list
  - apiGroups: [ "coordination.k8s.io" ]
    resources:
      - leases
    verbs:
      - get
      - create
      - update
  - apiGroups: [ "apps" ]
    resources:
      - replicasets
    verbs:
      - list
      - watch
  - apiGroups: [ "batch" ]
    resources:
      - jobs
    verbs:
      - list
      - watch

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: monitoring

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
  - kind: ServiceAccount
    name: elastic-agent
    namespace: monitoring
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io